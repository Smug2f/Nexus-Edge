package com.gamesense.client.module.modules.exploits;

import com.gamesense.api.util.misc.MessageBus;
import com.gamesense.api.util.player.RotationUtil;
import com.gamesense.client.module.Category;
import com.gamesense.client.module.Module;
import com.gamesense.client.module.ModuleManager;
import com.gamesense.client.module.modules.combat.FootConcrete;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.util.NonNullList;
import net.minecraft.util.math.BlockPos;

@Module.Declaration(name = "RubberBand", category = Category.Exploits)
public class RubberBand extends Module {

    @Override
    protected void onEnable() {
        getPacket(false,false);
        disable();
    }

    public static BlockPos findHoles(Boolean positive) {

        NonNullList<BlockPos> holes = NonNullList.create();

        for (int i = !positive ? -90 : 2; i < 90; i++)
            if (!new BlockPos(mc.player.posX, mc.player.posY + i, mc.player.posZ).equals(new BlockPos(mc.player.getPositionVector())) && mc.world.isAirBlock(new BlockPos(mc.player.posX, mc.player.posY + i, mc.player.posZ))) {
                holes.add(new BlockPos(mc.player.posX, mc.player.posY + i, mc.player.posZ));
            }

        for (BlockPos pos : holes) {

            if (mc.world.isAirBlock(pos) && mc.world.isAirBlock(pos.add(0, 1, 0)) && pos.getDistance(((int) mc.player.posX), ((int) mc.player.posY), ((int) mc.player.posZ)) >= 3
                    && !(Math.floor(pos.y) == Math.floor(mc.player.posY))) {
                holes.add(pos);
                break;
            }

        }

        try {
            return holes.get(holes.size() - 1);
        } catch (Exception e) {
            if (holes.isEmpty()) {

                return new BlockPos(mc.player.posX, mc.player.posY + 1, mc.player.posZ);

            } else {

                return holes.get(0);

            }
        }

    }

    public static void getPacket(Boolean debug, Boolean positive) {

        BlockPos pos = findHoles(positive);

        if (debug)
            MessageBus.sendClientPrefixMessage("Pos: " + (Math.floor(pos.x) + 0.5) + " " + Math.floor(pos.y) + " " + (Math.floor(pos.z) + 0.5) + " " + mc.world.isAirBlock(pos.down()));

        mc.player.connection.sendPacket(new CPacketPlayer.Position(Math.floor(pos.x) + 0.5, Math.floor(pos.y), Math.floor(pos.z) + 0.5, mc.world.isAirBlock(pos.down())));

    }

}
