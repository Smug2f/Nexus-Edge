package com.gamesense.client.module.modules.exploits;

import com.gamesense.api.event.events.PacketEvent;
import com.gamesense.api.setting.values.BooleanSetting;
import com.gamesense.api.setting.values.IntegerSetting;
import com.gamesense.api.util.misc.MessageBus;
import com.gamesense.client.module.Category;
import com.gamesense.client.module.Module;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.Listener;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.network.play.server.SPacketEffect;
import net.minecraft.network.play.server.SPacketEntityTeleport;

import java.util.Objects;

@Module.Declaration(name = "CoordinateExploit", category = Category.Exploits)
public class CoordinateExploit extends Module {

    BooleanSetting sound = registerBoolean("Sound Pos", false);
    BooleanSetting tp = registerBoolean("Teleport Pos", false);
    IntegerSetting min = registerInteger("Min Distance", 500, 128, 1000);

    @EventHandler
    private final Listener<PacketEvent.Receive> receiveListener = new Listener<>(event -> {

        if (event.getPacket() instanceof SPacketEntityTeleport && tp.getValue()) {

            SPacketEntityTeleport et = (SPacketEntityTeleport) event.getPacket();

            if (mc.world.getEntityByID(et.getEntityId()) instanceof EntityPlayer && mc.player.getDistance(et.getX(), et.getY(), et.getZ()) > min.getValue()) {

                MessageBus.sendClientPrefixMessage("Player " + Objects.requireNonNull(mc.world.getEntityByID(et.getEntityId())).getDisplayName() + " In Render Distance Teleported to: [" + Math.round(et.getX()) + ", " + Math.round(et.getY()) + ", " + Math.round(et.getZ()) + "]");

            }

        }

        if (event.getPacket() instanceof SPacketEffect && sound.getValue()) {

            SPacketEffect sp = (SPacketEffect) event.getPacket();

            if (mc.player.getDistance(sp.getSoundPos().getX(),sp.getSoundPos().getY(),sp.getSoundPos().getZ()) > min.getValue()) {
                switch (sp.getSoundType()) {
                    case 1023: // wither
                        MessageBus.sendClientPrefixMessage("Wither spawned at: [" + sp.soundPos + "]");
                        break;

                    case 1028: // dragon (deez nuts)
                        MessageBus.sendClientPrefixMessage("End dragon spawned at: [" + sp.soundPos + "]");
                        break;

                    case 1038: // end portal
                        MessageBus.sendClientPrefixMessage("Portal opened at: [" + sp.soundPos + "]");
                        break;

                }
            }

        }

    });

}
